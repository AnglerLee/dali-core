<VertexShader>

  void main()
  {
    gl_Position = uMvpMatrix * vec4(aPosition, 1.0);
    vTexCoord = aTexCoord;

#ifdef USE_GRADIENT
    lowp float f = dot( aPosition.xy * uInvTextSize - uGradientLine.xy, uGradientLine.zw );
    vColor = mix(uTextColor, uGradientColor, f);
#endif
  }

</VertexShader>

<FragmentShader>

  void main()
  {
    // sample distance field
    highp float distance = texture2D(sTexture, vTexCoord).a;

#ifdef USE_GRADIENT
    lowp vec4 color = clamp(vColor, 0., 1.); // gradiant calculation can overflow.
#else
    lowp vec4 color = uTextColor;
#endif

    // adjust fragment alpha by sampled distance
    color.a *= smoothstep(uSmoothing[0], uSmoothing[1], distance );

    // final color multiplied by Actor color
    gl_FragColor = uColor * color;
  }

</FragmentShader>
